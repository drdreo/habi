name: CI

on:
    push:
        branches:
            - master
    pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
    actions: read
    contents: read
    deployments: write
    packages: write
    attestations: write
    id-token: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  CI:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: "pnpm: setup"
              uses: pnpm/action-setup@v4
              with:
                  version: 9

            # This enables task distribution via Nx Cloud
            # Run this command as early as possible, before dependencies are installed
            # Learn more at https://nx.dev/ci/reference/nx-cloud-cli#npx-nxcloud-startcirun
          #            - run: npx nx-cloud start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="build"

            # Cache node_modules
            - uses: actions/setup-node@v4
              with:
                  node-version: 22
                  cache: "pnpm"

            - uses: actions/setup-go@v5
              with:
                go-version: '^1.22.0'
                cache-dependency-path: api/go.sum

            - name: "pnpm: install"
              run: pnpm install

            - name: "railway: install"
              run: pnpm i -g @railway/cli

            - uses: nrwl/nx-set-shas@v4
              with:
                main-branch-name: "master"

            - name: "NX: check affected client"
              id: nx_affected_client
              uses: ./.github/actions/nx-affected
              with:
                projects: 'client'

            - name: "NX: check affected api"
              id: nx_affected_api
              uses: ./.github/actions/nx-affected
              with:
                projects: 'api'

          # Prepend any command with "nx-cloud record --" to record its logs to Nx Cloud
            # - run: npx nx-cloud record -- echo Hello World
            # Nx Affected runs only tasks affected by the changes in this PR/commit. Learn more: https://nx.dev/ci/features/affected
          # --no-agents disables remote task execution
            - run: npx nx affected -t lint test build

            - name: "Cloudflare: deploy"
              id: cloudflare-deploy
              if: ${{steps.nx_affected_client.outputs.is_affected == 'true'}}
              uses: cloudflare/wrangler-action@v3
              with:
                apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
                accountId: ${{ vars.CLOUDFLARE_ACCOUNT_ID }}
                command: pages deploy dist/client/browser --project-name=${{ vars.CLOUDFLARE_PROJECT_NAME }}
                wranglerVersion: '3'
                packageManager: pnpm

            - uses: chrnorm/deployment-action@v2
              name: "GitHub: create deployment"
              if: ${{steps.nx_affected_client.outputs.is_affected == 'true'}}
              with:
                token: '${{ github.token }}'
                environment-url: ${{ steps.cloudflare-deploy.outputs.deployment-url }}
                environment: 'habi (Production)'
                production-environment: true
                ref: master
                auto-merge: true

            - name: "Docker: Log in to the Container registry"
              if: ${{steps.nx_affected_api.outputs.is_affected == 'true'}}
              uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
              with:
                registry: ${{ env.REGISTRY }}
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}

            - name: "Docker: extract metadata (tags, labels)"
              if: ${{steps.nx_affected_api.outputs.is_affected == 'true'}}
              id: meta
              uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
              with:
                images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                tags: |
                  # set latest tag for default branch
                  type=raw,value=latest,enable={{is_default_branch}}

            - name: "Docker: build and push"
              if: ${{steps.nx_affected_api.outputs.is_affected == 'true'}}
              id: push
              uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
              with:
                context: .
                file: api/Dockerfile
                push: true
                tags: ${{ steps.meta.outputs.tags }}
                labels: ${{ steps.meta.outputs.labels }}

            - name: "Docker: generate artifact attestation"
              if: ${{steps.nx_affected_api.outputs.is_affected == 'true'}}
              uses: actions/attest-build-provenance@v1
              with:
                subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
                subject-digest: ${{ steps.push.outputs.digest }}
                push-to-registry: true

            - name: "railway: re-deploy"
              if: ${{steps.nx_affected_api.outputs.is_affected == 'true'}}
              run: railway redeploy --service 'Habit Api' --yes
              env:
                RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}